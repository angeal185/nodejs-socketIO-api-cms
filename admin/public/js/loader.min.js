var loader = {},
loaderAlive = true;

loader.Particle = function( opt ) {
  this.radius = 7;
  this.x = opt.x;
  this.y = opt.y;
  this.angle = opt.angle;
  this.speed = opt.speed;
  this.accel = opt.accel;
  this.decay = 0.01;
  this.life = 1;
};

loader.Particle.prototype.step = function( i ) {
  this.speed += this.accel;
  this.x += Math.cos( this.angle ) * this.speed;
  this.y += Math.sin( this.angle ) * this.speed;
  this.angle += loader.PI / 64;
  this.accel *= 1.01;
  this.life -= this.decay;

  if( this.life <= 0 ) {
    loader.particles.splice( i, 1 );
  }
};

loader.Particle.prototype.draw = function( i ) {
  loader.ctx.fillStyle = loader.ctx.strokeStyle = 'hsla(' + ( loader.tick + ( this.life * 120 ) ) + ', 100%, 60%, ' + this.life + ')';
  loader.ctx.beginPath();
  if( loader.particles[ i - 1 ] ) {
    loader.ctx.moveTo( this.x, this.y );
    loader.ctx.lineTo( loader.particles[ i - 1 ].x, loader.particles[ i - 1 ].y );
  }
  loader.ctx.stroke();

  loader.ctx.beginPath();
  loader.ctx.arc( this.x, this.y, Math.max( 0.001, this.life * this.radius ), 0, loader.TWO_PI );
  loader.ctx.fill();

  var size = Math.random() * 1.25;
  loader.ctx.fillRect( ~~( this.x + ( ( Math.random() - 0.5 ) * 35 ) * this.life ), ~~( this.y + ( ( Math.random() - 0.5 ) * 35 ) * this.life ), size, size );
}

loader.step = function() {
  loader.particles.push( new loader.Particle({
    x: loader.width / 2 + Math.cos( loader.tick / 20 ) * loader.min / 2,
    y: loader.height / 2 + Math.sin( loader.tick / 20 ) * loader.min / 2,
    angle: loader.globalRotation + loader.globalAngle,
    speed: 0,
    accel: 0.01
  }));

  loader.particles.forEach( function( elem, index ) {
    elem.step( index );
  });

  loader.globalRotation += loader.PI / 6;
  loader.globalAngle += loader.PI / 6;
};

loader.draw = function() {
  loader.ctx.clearRect( 0, 0, loader.width, loader.height );

  loader.particles.forEach( function( elem, index ) {
    elem.draw( index );
  });
};



loader.loop = function() {
  if (loaderAlive){
    requestAnimationFrame( loader.loop );
    loader.step();
    loader.draw();
    loader.tick++;
  }
};

loader.init = function() {
  loader.canvas = document.createElement( 'canvas' );
  loader.canvas.id = 'loader';
  loader.ctx = loader.canvas.getContext( '2d' );
  loader.width = loader.canvas.width = 300;
  loader.height = loader.canvas.height = 300;
  loader.min = loader.width * 0.5;
  loader.particles = [];
  loader.globalAngle = 0;
  loader.globalRotation = 0;
  loader.tick = 0;
  loader.PI = Math.PI;
  loader.TWO_PI = loader.PI * 2;
  loader.ctx.globalCompositeOperation = 'lighter';
  document.getElementById('loaderMask').appendChild( loader.canvas );
  loader.loop();
};


function stopLoader() {
  loaderAlive = false;
}

loader.init();
