var Node=require("./node"),sprintf=require("../functions").s,utils=require("../utils"),nodes=require("./"),String=module.exports=function(t,e){Node.call(this),this.val=t,this.string=t,this.prefixed=!1,this.quote="string"!=typeof e?"'":e};String.prototype.__proto__=Node.prototype,String.prototype.toString=function(){return this.quote+this.val+this.quote},String.prototype.clone=function(){var t=new String(this.val,this.quote);return t.lineno=this.lineno,t.column=this.column,t.filename=this.filename,t},String.prototype.toJSON=function(){return{__type:"String",val:this.val,quote:this.quote,lineno:this.lineno,column:this.column,filename:this.filename}},String.prototype.toBoolean=function(){return nodes.Boolean(this.val.length)},String.prototype.coerce=function(t){switch(t.nodeName){case"string":return t;case"expression":return new String(t.nodes.map(function(t){return this.coerce(t).val},this).join(" "));default:return new String(t.toString())}},String.prototype.operate=function(t,e){switch(t){case"%":var n=new nodes.Expression;n.push(this);var o="expression"==e.nodeName?utils.unwrap(e).nodes:[e];return sprintf.apply(null,[n].concat(o));case"+":var n=new nodes.Expression;return n.push(new String(this.val+this.coerce(e).val)),n;default:return Node.prototype.operate.call(this,t,e)}};
