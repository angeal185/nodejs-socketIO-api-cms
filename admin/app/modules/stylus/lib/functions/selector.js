function pushToStack(e,r){e.forEach(function(e){e=e.first,utils.assertString(e,"selector"),r.push(parse(e.string))})}function parse(e){var r,t=new require("../parser"),s=new t(e);return s.state.push("selector-parts"),r=s.selector(),r.forEach(function(e){e.val=e.segments.map(function(e){return e.toString()}).join("")}),r}var utils=require("../utils");(module.exports=function(){var e=this.selectorStack,r=[].slice.call(arguments);if(1==r.length){var t=utils.unwrap(r[0]),s=t.nodes.length;if(1==s){utils.assertString(t.first,"selector");var n=require("../selector-parser"),i=t.first.string;if(new n(i).parse().val==i)return i;e.push(parse(i))}else s>1&&(t.isList?pushToStack(t.nodes,e):e.push(parse(t.nodes.map(function(e){return utils.assertString(e,"selector"),e.string}).join(" "))))}else r.length>1&&pushToStack(r,e);return e.length?utils.compileSelectors(e).join(","):"&"}).raw=!0;
