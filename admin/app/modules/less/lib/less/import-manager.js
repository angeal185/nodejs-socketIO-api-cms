var contexts=require("./contexts"),Parser=require("./parser/parser"),FunctionImporter=require("./plugins/function-importer");module.exports=function(e){var t=function(e,t){this.rootFilename=t.filename,this.paths=e.paths||[],this.contents={},this.contentsIgnoredChars={},this.mime=e.mime,this.error=null,this.context=e,this.queue=[],this.files={}};return t.prototype.push=function(t,r,n,o,i){var a=this;this.queue.push(t);var s=function(e,r,n){a.queue.splice(a.queue.indexOf(t),1);var s=n===a.rootFilename;o.optional&&e?i(null,{rules:[]},!1,null):(a.files[n]=r,e&&!a.error&&(a.error=e),i(e,r,s,n))},u={relativeUrls:this.context.relativeUrls,entryPath:n.entryPath,rootpath:n.rootpath,rootFilename:n.rootFilename},l=e.getFileManager(t,n.currentDirectory,this.context,e);if(!l)return void s({message:"Could not find a file-manager for "+t});r&&(t=l.tryAppendExtension(t,o.plugin?".js":".less"));var c=function(e){var t=e.filename,r=e.contents.replace(/^\uFEFF/,"");u.currentDirectory=l.getPath(t),u.relativeUrls&&(u.rootpath=l.join(a.context.rootpath||"",l.pathDiff(u.currentDirectory,u.entryPath)),!l.isPathAbsolute(u.rootpath)&&l.alwaysMakePathsAbsolute()&&(u.rootpath=l.join(u.entryPath,u.rootpath))),u.filename=t;var i=new contexts.Parse(a.context);i.processImports=!1,a.contents[t]=r,(n.reference||o.reference)&&(u.reference=!0),o.plugin?new FunctionImporter(i,u).eval(r,function(e,r){s(e,r,t)}):o.inline?s(null,r,t):new Parser(i,a,u).parse(r,function(e,r){s(e,r,t)})},h=l.loadFile(t,n.currentDirectory,this.context,e,function(e,t){e?s(e):c(t)});h&&h.then(c,s)},t};
