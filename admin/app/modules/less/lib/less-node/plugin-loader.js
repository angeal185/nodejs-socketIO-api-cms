var path=require("path"),PluginLoader=function(r){this.less=r};PluginLoader.prototype.tryLoadPlugin=function(r,e){var n=this.tryRequirePlugin(r);if(n){if("function"==typeof n&&(n=new n),n.minVersion&&this.compareVersion(n.minVersion,this.less.version)<0)return console.log("plugin "+r+" requires version "+this.versionToString(n.minVersion)),null;if(e){if(!n.setOptions)return console.log("options have been provided but the plugin "+r+"does not support any options"),null;try{n.setOptions(e)}catch(e){return console.log("Error setting options on plugin "+r),console.log(e.message),null}}return n}return null},PluginLoader.prototype.compareVersion=function(r,e){for(var n=0;n<r.length;n++)if(r[n]!==e[n])return parseInt(r[n])>parseInt(e[n])?-1:1;return 0},PluginLoader.prototype.versionToString=function(r){for(var e="",n=0;n<r.length;n++)e+=(e?".":"")+r[n];return e},PluginLoader.prototype.tryRequirePlugin=function(r){try{return require("../../../"+r)}catch(r){}try{return require(path.join(process.cwd(),"node_modules",r))}catch(r){}try{return require(path.join(process.cwd(),r))}catch(r){}if("."!==r[0])try{return require(r)}catch(r){}},PluginLoader.prototype.printUsage=function(r){for(var e=0;e<r.length;e++){var n=r[e];n.printUsage&&n.printUsage()}},module.exports=PluginLoader;
