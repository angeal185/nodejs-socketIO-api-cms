var isUrlRe=/^(?:https?:)?\/\//i,url=require("url"),request,PromiseConstructor,AbstractFileManager=require("../less/environment/abstract-file-manager.js"),logger=require("../less/logger"),UrlFileManager=function(){};UrlFileManager.prototype=new AbstractFileManager,UrlFileManager.prototype.supports=function(e,r,t,o){return isUrlRe.test(e)||isUrlRe.test(r)},UrlFileManager.prototype.loadFile=function(e,r,t,o){return PromiseConstructor||(PromiseConstructor="undefined"==typeof Promise?require("promise"):Promise),new PromiseConstructor(function(o,s){if(void 0===request)try{request=require("request")}catch(e){request=null}if(!request)return void s({type:"File",message:"optional dependency 'request' required to import over http(s)\n"});var i=isUrlRe.test(e)?e:url.resolve(r,e),n=url.parse(i);n.protocol||(n.protocol="http",i=n.format()),request.get({uri:i,strictSSL:!t.insecure},function(e,r,t){return e?void s({type:"File",message:"resource '"+i+"' gave this Error:\n  "+e+"\n"}):r&&404===r.statusCode?void s({type:"File",message:"resource '"+i+"' was not found\n"}):(t||logger.warn("Warning: Empty body (HTTP "+r.statusCode+') returned by "'+i+'"'),void o({contents:t,filename:i}))})})},module.exports=UrlFileManager;
